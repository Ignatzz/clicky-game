{"version":3,"sources":["components/Navbar/index.js","components/Card/index.js","components/GameZone/index.js","App.js","index.js"],"names":["Navbar","react_default","a","createElement","className","href","Card","props","key","id","onClick","handleClick","clicked","name","src","image","alt","GameZone","state","currentScore","highScore","images","message","imageOrder","_this","forEach","index","setState","sort","Math","random","_this$state","newScore","newHighScore","_this2","this","map","components_Card","Component","App","components_Navbar","components_GameZone","ReactDOM","render","src_App","document","getElementById"],"mappings":"mtBAgBeA,MAbf,WACE,OACEC,EAAAC,EAAAC,cAAA,WACFF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACXH,EAAAC,EAAAC,cAAA,KAAGE,KAAK,KAAR,SAEFJ,EAAAC,EAAAC,cAAA,MAAIC,UAAW,eAAf,sECOOE,SAdF,SAAAC,GAAK,OACjBN,EAAAC,EAAAC,cAAA,OACAC,UAAU,qDACVI,IAAKD,EAAME,GACXC,QAAS,kBAAMH,EAAMI,YAAYJ,EAAME,GAAIF,EAAMK,WAEhDX,EAAAC,EAAAC,cAAA,OACAM,GAAIF,EAAMM,KACRC,IAAKP,EAAMQ,MACXC,IAAI,qCCyDOC,oNAhEdC,MAAQ,CACPC,aAAc,EACdC,UAAW,EACXC,SACAC,QAAS,wLAEPX,YAAc,SAACF,EAAIG,GACrB,IAAMW,EAAaC,EAAKN,MAAMG,OAC9B,GAAIT,EAIH,OAHAW,EAAWE,QAAQ,SAACV,EAAOW,GAC1BH,EAAWG,GAAOd,SAAU,IAEtBY,EAAKG,SAAS,CACpBZ,MAAOQ,EAAWK,KAAK,kBAAMC,KAAKC,SAAW,KAC7CR,QAAS,aACTH,aAAc,IAIfI,EAAWE,QAAQ,SAACV,EAAOW,GACtBjB,IAAOM,EAAMN,KAChBc,EAAWG,GAAOd,SAAU,KAH1B,IAAAmB,EAMgCP,EAAKN,MAAjCE,EANJW,EAMIX,UACFY,EAPFD,EAMeZ,aACa,EAC1Bc,EAAeD,EAAWZ,EAAYY,EAAWZ,EACvD,OAAOI,EAAKG,SAAS,CACpBZ,MAAOQ,EAAWK,KAAK,kBAAMC,KAAKC,SAAW,KAC7CR,QAAS,WACTH,aAAca,EACdZ,UAAWa,6EAKL,IAAAC,EAAAC,KACR,OACClC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qCACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,2BACZH,EAAAC,EAAAC,cAAA,SAAIgC,KAAKjB,MAAMI,UAEhBrB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,4BACdH,EAAAC,EAAAC,cAAA,2BAAmBgC,KAAKjB,MAAMC,aAA9B,iDAA8EgB,KAAKjB,MAAME,YAE3FnB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aAEdH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACd+B,KAAKjB,MAAMG,OAAOe,IAAI,SAAArB,GAAK,OAC3Bd,EAAAC,EAAAC,cAACkC,EAAD,CACC7B,IAAKO,EAAMN,GACXA,GAAIM,EAAMN,GACVG,QAASG,EAAMH,QACfG,MAAOA,EAAMA,MACbJ,YAAauB,EAAKvB,0BAvDF2B,cCSRC,MATf,WACE,OACItC,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACqC,EAAD,MACAvC,EAAAC,EAAAC,cAACsC,EAAD,QCJRC,IAASC,OAAO1C,EAAAC,EAAAC,cAACyC,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.cdfe7ef4.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./style.css\";\n// Depending on the current path, this component sets the \"active\" class on the appropriate navigation link item\nfunction Navbar() {\n  return (\n    <nav>\n  <div className=\"navWide jumbotron\">\n      <div className=\"wideDiv\">\n          <a href=\"#\">Home</a>\n        </div>\n        <h1 className= \"text-center\">Venture Bros Clicky Game!!!!</h1>\n    </div>\n</nav>\n  );\n}\n\nexport default Navbar;\n","import React from 'react';\nimport \"./style.css\";\n\nconst Card = props => (\n\t<div \n\tclassName=\"Cards col-xs-6 col-sm-6 col-md-4 col-lg-3 col-xl-3\" \n\tkey={props.id}\n\tonClick={() => props.handleClick(props.id, props.clicked)}\n\t>\n\t\t<img \n\t\tid={props.name}\n    src={props.image}\n    alt=\"picture failed to load\"\n\t\t/>\n\t</div>\n);\n\nexport default Card;","import React, { Component } from 'react';\r\nimport Card from '../Card';\r\nimport images from \"../../images.json\";\r\nimport \"./style.css\";\r\nclass GameZone extends Component {\r\n\tstate = {\r\n\t\tcurrentScore: 0,\r\n\t\thighScore: 0,\r\n\t\timages,\r\n\t\tmessage: \"Click on any image to start the game! Try to click as many times without clicking the same image twice. <br> After each click the images will shuffle positions, so pay attention!\"\r\n    };\r\n    handleClick = (id, clicked) => {\r\n\t\tconst imageOrder = this.state.images;\r\n\t\tif (clicked) {\r\n\t\t\timageOrder.forEach((image, index) => {\r\n\t\t\t\timageOrder[index].clicked = false;\r\n\t\t\t});\r\n\t\t\treturn this.setState({\r\n\t\t\t\timage: imageOrder.sort(() => Math.random() - 0.5),\r\n\t\t\t\tmessage: \"Incorrect!\",\r\n\t\t\t\tcurrentScore: 0\r\n\t\t\t})\r\n\t\t}\r\n\t\telse {\r\n\t\t\timageOrder.forEach((image, index) => {\r\n\t\t\t\tif (id === image.id) {\r\n\t\t\t\t\timageOrder[index].clicked = true;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\tconst { highScore, currentScore } = this.state;\r\n\t\t\tconst newScore = currentScore + 1;\r\n\t\t\tconst newHighScore = newScore > highScore ? newScore : highScore;\r\n\t\t\treturn this.setState({\r\n\t\t\t\timage: imageOrder.sort(() => Math.random() - 0.5),\r\n\t\t\t\tmessage: \"Correct!\",\r\n\t\t\t\tcurrentScore: newScore,\r\n\t\t\t\thighScore: newHighScore,\r\n\t\t\t})\r\n\t\t}\r\n\t};\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className=\"container-fluid mainCardContainer\">\r\n\t\t\t<div className=\"infoDisplay text-center\">\r\n\t\t\t\t\t\t<p>{this.state.message}</p>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"scoreDisplay text-center\">\r\n\t\t\t\t\t\t<p>Current Score: {this.state.currentScore}     ¯\\_(ツ)_/¯        High Score: {this.state.highScore}</p>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t<div className=\"container\">\r\n\t\t\t\t\t\r\n\t\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t{this.state.images.map(image => (\r\n\t\t\t\t\t\t<Card\r\n\t\t\t\t\t\t\tkey={image.id}\r\n\t\t\t\t\t\t\tid={image.id}\r\n\t\t\t\t\t\t\tclicked={image.clicked}\r\n\t\t\t\t\t\t\timage={image.image}\r\n\t\t\t\t\t\t\thandleClick={this.handleClick}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t))}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n};\r\n\r\nexport default GameZone;","import React from \"react\";\nimport Navbar from \"./components/Navbar\";\nimport GameZone from \"./components/GameZone\";\n\nfunction App() {\n  return (\n      <div>\n        <Navbar />\n        <GameZone />\n      </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}